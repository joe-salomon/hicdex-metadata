{"__version": 1, "token_id": 495741, "symbol": "OBJKT", "name": "Interpolation From a Circle to an Equilateral Triangle (#07)", "description": "/*\n * \u25ef\u27f7\u25b3 \u2116.07\n * Interpolation From a Circle to an Equilateral Triangle (#07)\n * \"By gradually shrinking the circle's radius, \n * revealing triangular corners within.\"\n * Page Seven of a 14-Page Pedagogical Sketchbook\n * By Golan Levin (@golan), 2017-2021.\n * https://link.medium.com/bn3sesXYOkb\n *\n * Animated GIF, 1024x1024, 360 frames @50fps, made with p5.js;\n * Presented October 25, 2017 on the Coding Train episode,\n * \"Guest Tutorial #7: Circle Morphing with Golan Levin\"\n * (https://www.youtube.com/watch?v=mvgcNOX8JGQ&t=24m10s).\n * NFT created in 2021 for #Sketch4Processing, and minted by\n * KT1TaPfAuhmnyo6Le6zKe17opvFCsTxk1VN7 (golan_x_processingorg).\n * Per contract, 20% of all sales are donated to @ProcessingOrg.\n *\n * References:\n * - Joseph Choma, \"Morphing: A Guide to Mathematical\n *   Transformations for Architects and Designers\", 2015.\n * - Guus Craenen and Adrian H\u00e4ne, \"Fruit Salad\", 1970.\n * - CTG Japan (Masao Kohmura, Koji Fujino, Makoto Ohtake),\n *   \"Running Cola is Africa!\", 1968.\n * - Wassily Kandinsky, \"Point and Line to Plane\", 1926.\n * - William Kolomyjec, \"Banana Cone\", 1970-1975.\n * - J\u00fcrg Lehni and Wilm Thoben, \"Footnotes from the History\n *   of Two Cultures: Mitsuo Katsui\", 2015.\n * - Manfred Mohr, \"P-112 / Lady Quark\", 1972.\n * - Bruno Munari, \"Square Circle Triangle\", 1960-1976.\n * - Charles Philipon, \"Les Poires\", 1831.\n * - Troika, \"Squaring the Circle\"; \"Dark Matter\", 2013-2014.\n * - Wucius Wong, \"Principles of Two-Dimensional Design\", 1972.\n * - Yuki Yoshida, \"A Book of drawCircle()\", 2014.\n */\n\n\nvar radius;\nvar cx, cy;\nvar trianglePoints = []; \nvar nFrames = 360;\nvar third;\nvar theta;\nvar strokeCol;\nvar backgrCol;\n\nfunction setup() {\n  createCanvas(1024, 1024);\n  pixelDensity(1);\n  frameRate(60);\n  strokeCol = color(24, 14, 6, 255);\n  backgrCol = color(253, 247, 241);\n  \n  radius = width / 2 * 0.75;\n  cx = width / 2;\n  cy = height / 2;\n  third = TWO_PI / 3.0;\n\n  for (var i = 0; i < 3; i++) {\n    var x = cx + radius * cos(i * third - HALF_PI);\n    var y = cy + radius * sin(i * third - HALF_PI);\n    trianglePoints[i] = { x, y };\n  }\n}\n\nfunction draw() {\n  background(backgrCol);\n  noFill();\n  stroke(strokeCol);\n  strokeJoin(ROUND);\n  strokeCap(ROUND);\n  strokeWeight(ceil(width * 0.01));\n\n  theta = TWO_PI * (frameCount % nFrames) / nFrames;\n  var amount = 0.745 + 0.255 * cos(theta); // Magic numbers\n  var rad = amount * radius;\n  var nPts = 30;\n\n  for (var i = 0; i < 3; i++) {\n    var x1 = trianglePoints[(i + 0) % 3].x - cx;\n    var y1 = trianglePoints[(i + 0) % 3].y - cy;\n    var x2 = trianglePoints[(i + 1) % 3].x - cx;\n    var y2 = trianglePoints[(i + 1) % 3].y - cy;\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var dr = sqrt(dx * dx + dy * dy);\n    var D = (x1 * y2) - (x2 * y1);\n\n    // See http://mathworld.wolfram.com/Circle-LineIntersection.html\n    var discriminant = rad * rad * dr * dr - D * D;\n    if (discriminant <= 0) {\n      line(x1 + cx, y1 + cy, x2 + cx, y2 + cy);\n    } else {\n      var dysign = ((dy < 0) ? -1 : 1);\n      var px = cx + (D * dy + dysign * dx * sqrt(discriminant)) / (dr * dr);\n      var py = cy + (-D * dx + abs(dy) * sqrt(discriminant)) / (dr * dr);\n      var qx = cx + (D * dy - dysign * dx * sqrt(discriminant)) / (dr * dr);\n      var qy = cy + (-D * dx - abs(dy) * sqrt(discriminant)) / (dr * dr);\n      var pAng = atan2(py - cy, px - cx);\n      var qAng = atan2(qy - cy, qx - cx);\n\n      if (i == 2) {\n        var tmp = pAng;\n        pAng = qAng;\n        qAng = tmp;\n        if (py > cy) {\n          qAng -= TWO_PI;\n        }\n      }\n\n      beginShape();\n      vertex(x2 + cx, y2 + cy);\n      for (var j = 0; j <= nPts; j++) {\n        var t = map(j, 0, nPts, pAng, qAng);\n        var tx = cx + rad * cos(t);\n        var ty = cy + rad * sin(t);\n        vertex(tx, ty);\n      }\n      vertex(x1 + cx, y1 + cy);\n      endShape();\n    }\n  }\n}", "artifact_uri": "ipfs://bafybeibuksowbaeb2xwdbkolxfhobsgqxfb5mqzeerni4slqoxofbkk77i", "display_uri": "ipfs://bafybeibuksowbaeb2xwdbkolxfhobsgqxfb5mqzeerni4slqoxofbkk77i", "thumbnail_uri": "ipfs://QmNrhZHUaEqxhyLfqoq1mtHSipkWHeT31LNHb1QEbDHgnc", "formats": [{"uri": "ipfs://bafybeibuksowbaeb2xwdbkolxfhobsgqxfb5mqzeerni4slqoxofbkk77i", "mimeType": "image/gif"}], "creators": ["KT1TaPfAuhmnyo6Le6zKe17opvFCsTxk1VN7"], "tags": ["circle", "triangle", "shape", "interpolation", "morphing", "morph", "tween", "transformation", "transmutation", "metamorphosis", "lofting", "loop", "gif", "geometry", "creativecoding", "pedagogicalsketchbook", "series", "collabcontract", "sketch4processing", "sketchforprocessing", "Processing", "ProcessingOrg", "golan", "golanlevin"], "extra": {}}